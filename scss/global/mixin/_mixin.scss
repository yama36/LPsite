@use "../config" as *;


// font
@mixin font($font, $height:folse) {
  @if type-of($font) == number {
    font-size: $font / 10 * 1rem;
  } @else {
    font-size: map-get($fonts, $font);
  }
  @if type-of($height) == number {
    line-height: calc($height / $font);
  }
}

// title
@mixin title($content) {
  display: flex;

  .title-style {
    @include font(title);
    line-height: 0.75;
    font-weight: bold;
  }

  .nav__line {
    width: 21px;
    height: 24px;
    margin: auto $spacing-1 0;
    position: relative;

    span {
      position: absolute;
      top: -4px;
      left: 10px;
      background-color: $blue;
      width: 1px;
      height: 32px;
      transform: rotate(40deg);
    }

    &::after {
      width: 200px;
      position: absolute;
      @include font(ll);
      content: $content;
      color: $blue;
      left: 30px;
      bottom: -5px;
    }
  }


  @media (max-width: 600px) {
    .title-style {
      @include font(32);
    }

    .nav__line {
      width: 21px;
      height: 24px;
      margin: auto $spacing-1 0;
      position: relative;

      span {
        position: absolute;
        top: 2px;
        left: 10px;
        background-color: #4b6cb7;
        width: 1px;
        height: 25px;
        transform: rotate(40deg);
      }

      &::after {
        @include font(20);
        content: $content;
        color: $blue;
        left: 25px;
        bottom: -3px;
      }
    }
  }
}

// content-width
@mixin content-width() {
  width: $contents-width;
  max-width: $max-width;
  margin: 0 auto;
}

// margin padding
@mixin margin-bottom($size) {
  @if type-of($size) == number {
    margin-bottom: $size * 1px;
  } @else {
    margin-bottom: map-get($sizes, $size);
  }
}

@mixin padding-bottom($size) {
  @if type-of($size) == number {
    padding-bottom: $size * 1px;
  } @else {
    padding-bottom: map-get($sizes, $size);
  }
}

@mixin content-margin($top-size, $bottom-size: null) {
  @if type-of($top-size) == number {
    @if $bottom-size != null {
      margin: $top-size * 1px 0 $bottom-size * 1px;
    } @else {
      margin: $top-size * 1px 0;
    }
  } @else {
    margin: map-get($sizes, $top-size) 0;
  }
}

@mixin content-padding($top-size, $bottom-size: null) {
  @if type-of($top-size) == number {
    @if $bottom-size != null {
      padding: $top-size * 1px 0 $bottom-size * 1px;
    } @else {
      padding: $top-size * 1px 0;
    }
  } @else {
    padding: map-get($sizes, $top-size) 0;
  }
}

@mixin contents-size($content: $contents-count, $width: $max-width) {
  width: calc((85vw - ($spacing-5 * ($content - 1))) / $content);
  height: calc((85vw - ($spacing-5 * ($content - 1))) / $content);
  max-width: calc(($width - ($spacing-5 * ($content - 1)) - 2px) / $content);
  max-height: calc(($width - ($spacing-5 * ($content - 1)) - 2px) / $content);
}



// btn
// header-btn
@mixin btn() {
  display: block;
  width: auto;
  min-width: 256px;
  text-align: center;
  padding: 24px 40px;
  background-color: $blue;
  color: $white;
  line-height: .9;
  border: none;
  box-shadow: 0px 3px 4px 0 rgba($blueBlack, .46);

  span {
    position: relative;
    font-size: 20px;
    margin-left: 16px;
    top: 3px;
    left: -1px;
  }

  @media (max-width: 600px) {
    height: 44px;
    display: block;
    width: 256px;
    text-align: center;
    margin: 0 auto;
    padding: 10px 20px;
    background-color: #4b6cb7;
    color: #FFFFFF;
    line-height: 0;
    border: none;
    letter-spacing: -1.8px;
    box-shadow: 0px 3px 4px 0 rgb(24 40 72 / 46%);
    position: relative;
    bottom: -18px;
  }
}

@mixin btn--typeA {
  @include btn;
  display: flex;
  background-color: rgba($color: $black, $alpha: .64);
  justify-content: space-between;
  min-width: none;
  width: 264px;
  height: 56px;
  padding: 20px 16px;
  box-shadow: none;

  span {
    top: 1px;
    left: 2px;
  }
}

@mixin btn--typeIcon($color) {
  display: block;
  width: auto;
  min-width: 256px;
  text-align: center;
  padding: 24px 40px;
  background-color: $blue;
  color: $white;
  line-height: .9;
  border: none;
  box-shadow: 0px 3px 4px 0 rgba($blueBlack, .46);

  span {
    position: relative;
    font-size: 20px;
    margin-left: 16px;
    top: 3px;
    left: -1px;
  }

  width: 320px;
  height: 72px;
  line-height: 0;
  padding: 0;
  background-color: $color;
  display: flex;
  justify-content: center;
  align-items: center;

  .contact__btn-icon {
    width: 24px;
    height: 17px;
    margin-right: 12px;
  }

  .contact__btn-text {
    margin-right: 16px;
  }

  span {
    margin-left: 0;
    left: 20px;
  }

  @media (max-width: 600px) {
    width: 100%;
    max-width: 335px;
    height: 48px;
    margin: 0 auto;

    .contact__btn {
      &-icon {
        position: absolute;
        width: 16px;
        height: 11px;
        left: calc(((100vw - 335px) / 2) + 5px);
      }

      &-text {
        position: absolute;
        font-size: 14px;
        transform: translateX(17px);
      }
    }
  }
}


// anchor
@mixin anchor {
  padding-top: calc(map-get($sizes, 'l') + $header-nav-height);
  margin-top: calc(-1 * (map-get($sizes, 'l') + $header-nav-height));
}

// レスポンシブ
@mixin setWidth($w) {
  width: $w;
}


// text-content
@mixin text-content {
  line-height: 2;

  p {
    letter-spacing: .02em;
  }

  @media (max-width: 600px) {
    line-height: 1.77;

    p {
      letter-spacing: -0.1em;
    }
  }
}
